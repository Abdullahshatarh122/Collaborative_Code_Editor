import"bootstrap/dist/css/bootstrap.min.css";import"./style.css";import $ from"jquery";import SockJS from"sockjs-client";import{Stomp}from"@stomp/stompjs";import*as Y from"yjs";import{WebsocketProvider}from"y-websocket";import{MonacoBinding}from"y-monaco";import*as monaco from"monaco-editor";import{Terminal}from"xterm";import"xterm/css/xterm.css";const ydoc=new Y.Doc,provider=new WebsocketProvider("ws://localhost:1234","code-editor",ydoc),yText=ydoc.getText("monaco"),editor=monaco.editor.create(document.getElementById("editor"),{value:"// Write your code here",language:"java",theme:"vs-dark",automaticLayout:!0}),monacoBinding=new MonacoBinding(yText,editor.getModel(),new Set([editor]),provider.awareness);function setupLanguageFeatures(e){"java"===e?setupJavaLanguageFeatures():"python"===e&&setupPythonLanguageFeatures()}function setupJavaLanguageFeatures(){monaco.languages.registerCompletionItemProvider("java",{provideCompletionItems:()=>({suggestions:[{label:"System.out.println",kind:monaco.languages.CompletionItemKind.Snippet,insertText:"System.out.println(${1});",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,documentation:"Print a message to the console"}]})}),monaco.editor.setModelMarkers(editor.getModel(),"java",[{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:2,message:"Warning: Code might be incomplete",severity:monaco.MarkerSeverity.Warning}])}function setupPythonLanguageFeatures(){monaco.languages.registerCompletionItemProvider("python",{provideCompletionItems:()=>({suggestions:[{label:"print",kind:monaco.languages.CompletionItemKind.Snippet,insertText:"print(${1})",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,documentation:"Print a message to the console"}]})}),monaco.editor.setModelMarkers(editor.getModel(),"python",[{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:2,message:"Warning: Code might be incomplete",severity:monaco.MarkerSeverity.Warning}])}setupLanguageFeatures("java"),window.openProjectInIDE=function(e){const t=window.projects[e];fetch(`/api/projects/openProject/${t.id}`).then((e=>e.text())).then((e=>{editor.setValue(e),monaco.editor.setModelLanguage(editor.getModel(),t.language)})).catch((e=>console.error("Error loading project code:",e)))};const terminal=new Terminal({cursorBlink:!0,rows:18});terminal.open(document.getElementById("terminal-container")),terminal.write("Connected to the terminal.\r\n");const socket=new SockJS("/ws-console"),stompClient=Stomp.over(socket);stompClient.connect({},(function(e){stompClient.subscribe("/topic/terminal",(function(e){const t=JSON.parse(e.body);console.log("Received message: ",t),t.output&&terminal.write(t.output+"\r\n"),t.error&&terminal.write("Error: "+t.error+"\r\n")}))})),document.getElementById("runBtn").addEventListener("click",(function(){const e=document.getElementById("language-select").value,t=editor.getValue();terminal.reset();const o={language:e,code:t,input:""};stompClient.send("/app/executeCode",{},JSON.stringify(o))}));let inputBuffer="";terminal.onData((function(e){if(terminal.write(e),inputBuffer+=e,e.includes("\r")||e.includes("\n")){let e=inputBuffer.trim();terminal.write("\r\n"),stompClient.send("/app/input",{},e),inputBuffer=""}}));